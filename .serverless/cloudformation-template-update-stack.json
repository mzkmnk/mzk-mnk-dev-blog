{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "AppLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/mzk-mnk-dev-blog-lambda"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "mzk-mnk-dev-blog",
                  "prod",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mzk-mnk-dev-blog-lambda:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mzk-mnk-dev-blog-lambda:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": "mzk-mnk-dev-blog-lambda-role"
      }
    },
    "AppLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "mzk-mnk-dev-blog-deployment-bucket",
          "S3Key": "serverless/mzk-mnk-dev-blog/prod/1744985717001-2025-04-18T14:15:17.001Z/app.zip"
        },
        "Handler": "dist/mzk-mnk-dev-blog/server/server.main",
        "Runtime": "nodejs22.x",
        "FunctionName": "mzk-mnk-dev-blog-lambda",
        "MemorySize": 1769,
        "Timeout": 60,
        "Architectures": [
          "arm64"
        ],
        "Environment": {
          "Variables": {}
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AppLogGroup"
      ]
    },
    "AppLambdaVersionypMmkWjVfl5m6pvNNAWudWPZLeRPN0JSENak1IwfM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AppLambdaFunction"
        },
        "CodeSha256": "6HqdI7Y50kKuO0q1jt1x7LJlXmyDHNjkSC/xgxK/zac="
      }
    },
    "AppLambdaFunctionUrl": {
      "Type": "AWS::Lambda::Url",
      "Properties": {
        "AuthType": "NONE",
        "TargetFunctionArn": {
          "Fn::GetAtt": [
            "AppLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "AppLambdaPermissionFnUrl": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AppLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunctionUrl",
        "Principal": "*",
        "FunctionUrlAuthType": "NONE"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "mzk-mnk-dev-blog-deployment-bucket",
      "Export": {
        "Name": "sls-mzk-mnk-dev-blog-prod-ServerlessDeploymentBucketName"
      }
    },
    "AppLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AppLambdaVersionypMmkWjVfl5m6pvNNAWudWPZLeRPN0JSENak1IwfM"
      },
      "Export": {
        "Name": "sls-mzk-mnk-dev-blog-prod-AppLambdaFunctionQualifiedArn"
      }
    },
    "AppLambdaFunctionUrl": {
      "Description": "Lambda Function URL",
      "Value": {
        "Fn::GetAtt": [
          "AppLambdaFunctionUrl",
          "FunctionUrl"
        ]
      },
      "Export": {
        "Name": "sls-mzk-mnk-dev-blog-prod-AppLambdaFunctionUrl"
      }
    }
  }
}